<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Lua</title>
    <link>https://hello-world-example.github.io/Lua/docs/</link>
    <description>Recent content in Docs on Lua</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://hello-world-example.github.io/Lua/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/Lua/docs/Quick-Start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/Lua/docs/Quick-Start/</guid>
      <description>快速开始 安装 如果是在 Linux 或 Mac 下，Lua 大部分情况下已经安装
# 查看版本 $ lua -v Lua 5.2.4 Copyright (C) 1994-2015 Lua.org, PUC-Rio # 卸载原来安装的版本 $ which lua /usr/local/bin/lua # 发现是通过 brew 安装的 $ ll /usr/local/bin/lua /usr/local/bin/lua -&amp;gt; ../Cellar/lua/5.2.4_4/bin/lua # 卸载 $ brew uninstall lua 编译安装 # 下载解压 $ curl -R -O http://www.lua.org/ftp/lua-5.3.5.tar.gz $ tar zxvf lua-5.3.5.tar.gz $ cd lua-5.3.5 # 查看文档 $ open doc/contents.html # 编译 $ make Please do &amp;#39;make PLATFORM&amp;#39; where PLATFORM is one of these: aix bsd c89 freebsd generic linux macosx mingw posix solaris See doc/readme.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/Lua/docs/String-Function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/Lua/docs/String-Function/</guid>
      <description>string function    function 概述     .. 字符串拼接   string.upper(argument) 转大写   string.lower(argument) 转小写   string.format(...) 格式化，string.format(&amp;quot;the %s is : %d&amp;quot;, &amp;quot;value&amp;quot;, 4)   string.rep(string, n) 字符串 repeat，string.rep(&amp;quot;abc&amp;quot;, 2) --&amp;gt; abcabc   string.gsub(str,pattern,target[,num]) 替换，str, count = string.gsub(&amp;quot;燕燕燕&amp;quot;, &amp;quot;燕&amp;quot;, &amp;quot;子&amp;quot;)   string.find(str, pattern, [init, [end]]) 字符串查找，startI, endI = string.find(&amp;quot;大闹天宫&amp;quot;, &amp;quot;闹天&amp;quot;)，未找到返回 nil   string.len(arg) 【不支持中文】英文字符串长度，建议通过 utf8.len(arg) 代替   string.reverse(arg) 【不支持中文】反转   string.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/Lua/docs/String-Regex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/Lua/docs/String-Regex/</guid>
      <description>正则查找 Read More   Lua 的字符串匹配与正则表达式  OpenResty最佳实践 &amp;gt; 正则表达式  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/Lua/docs/Syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/Lua/docs/Syntax/</guid>
      <description>基础语法 注释 -- 单行注释 --- 单行注释（IDEA 中会自动生成注释） --[[ 多行注释 --]] 变量 -- 全局变量 var = 10 print(var) -- 删除变量 var = nil print(var) -- 局部变量 local b = 5 do local a = 6 -- 局部变量 var = 6 -- 全局变量 print(a, var); -- 6 6 end -- 变量赋值 a, b = 10, 2 * x 类型 print(type(nil)) --&amp;gt; nil print(type(true)) --&amp;gt; boolean print(type(10.4 * 3)) --&amp;gt; number print(type(&amp;#39;Hello world&amp;#39;)) --&amp;gt; string print(type(&amp;#34;Hello world&amp;#34;)) --&amp;gt; string print(type(type(X))) --&amp;gt; string print(type(print)) --&amp;gt; function print(type(type)) --&amp;gt; function print(type({ k1=v1, k2=v2 })) --&amp;gt; table -- userdata	表示任意存储在变量中的C数据结构 -- thread	表示执行的独立线路，用于执行协同程序 字符串 s1 = &amp;#34;this is string1&amp;#34; s2 = &amp;#39;this is string2&amp;#39; s3 = [[这是 多行字符串 ]] -- 字符串拼接 print(&amp;#34;a&amp;#34; .</description>
    </item>
    
  </channel>
</rss>